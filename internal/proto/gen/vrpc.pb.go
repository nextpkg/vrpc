// protoc vrpc.proto --go_out=. --go-grpc_out=.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: vrpc.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_vrpc_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_vrpc_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_vrpc_proto_rawDescGZIP(), []int{3, 0}
}

// vRPC请求消息
type VRPCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                                                        // 请求ID
	ServiceName   string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`                                                  // 服务名
	MethodName    string                 `protobuf:"bytes,3,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`                                                     // 方法名
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`                                                                             // 请求载荷
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 元数据
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                        // 时间戳
	TimeoutMs     int32                  `protobuf:"varint,7,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`                                                       // 超时时间(毫秒)
	ClientId      string                 `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`                                                           // 客户端ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VRPCRequest) Reset() {
	*x = VRPCRequest{}
	mi := &file_vrpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VRPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VRPCRequest) ProtoMessage() {}

func (x *VRPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vrpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VRPCRequest.ProtoReflect.Descriptor instead.
func (*VRPCRequest) Descriptor() ([]byte, []int) {
	return file_vrpc_proto_rawDescGZIP(), []int{0}
}

func (x *VRPCRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *VRPCRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *VRPCRequest) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *VRPCRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *VRPCRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VRPCRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *VRPCRequest) GetTimeoutMs() int32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *VRPCRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// vRPC响应消息
type VRPCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                                                        // 请求ID
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`                                                                             // 响应载荷
	StatusCode    int32                  `protobuf:"varint,3,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                    // 状态码
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                                               // 错误信息
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 元数据
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                        // 时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VRPCResponse) Reset() {
	*x = VRPCResponse{}
	mi := &file_vrpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VRPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VRPCResponse) ProtoMessage() {}

func (x *VRPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vrpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VRPCResponse.ProtoReflect.Descriptor instead.
func (*VRPCResponse) Descriptor() ([]byte, []int) {
	return file_vrpc_proto_rawDescGZIP(), []int{1}
}

func (x *VRPCResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *VRPCResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *VRPCResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *VRPCResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *VRPCResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VRPCResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 健康检查请求
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_vrpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vrpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_vrpc_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// 健康检查响应
type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=vrpc.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_vrpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vrpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_vrpc_proto_rawDescGZIP(), []int{3}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_vrpc_proto protoreflect.FileDescriptor

const file_vrpc_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"vrpc.proto\x12\x04vrpc\"\xde\x02\n" +
	"\vVRPCRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x12\x1f\n" +
	"\vmethod_name\x18\x03 \x01(\tR\n" +
	"methodName\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12;\n" +
	"\bmetadata\x18\x05 \x03(\v2\x1f.vrpc.VRPCRequest.MetadataEntryR\bmetadata\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\a \x01(\x05R\ttimeoutMs\x12\x1b\n" +
	"\tclient_id\x18\b \x01(\tR\bclientId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x02\n" +
	"\fVRPCResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12\x1f\n" +
	"\vstatus_code\x18\x03 \x01(\x05R\n" +
	"statusCode\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12<\n" +
	"\bmetadata\x18\x05 \x03(\v2 .vrpc.VRPCResponse.MetadataEntryR\bmetadata\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x92\x01\n" +
	"\x13HealthCheckResponse\x12?\n" +
	"\x06status\x18\x01 \x01(\x0e2'.vrpc.HealthCheckResponse.ServingStatusR\x06status\":\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x022\x80\x01\n" +
	"\vVRPCService\x12-\n" +
	"\x04Call\x12\x11.vrpc.VRPCRequest\x1a\x12.vrpc.VRPCResponse\x12B\n" +
	"\vHealthCheck\x12\x18.vrpc.HealthCheckRequest\x1a\x19.vrpc.HealthCheckResponseB\aZ\x05./genb\x06proto3"

var (
	file_vrpc_proto_rawDescOnce sync.Once
	file_vrpc_proto_rawDescData []byte
)

func file_vrpc_proto_rawDescGZIP() []byte {
	file_vrpc_proto_rawDescOnce.Do(func() {
		file_vrpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vrpc_proto_rawDesc), len(file_vrpc_proto_rawDesc)))
	})
	return file_vrpc_proto_rawDescData
}

var file_vrpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_vrpc_proto_goTypes = []any{
	(HealthCheckResponse_ServingStatus)(0), // 0: vrpc.HealthCheckResponse.ServingStatus
	(*VRPCRequest)(nil),                    // 1: vrpc.VRPCRequest
	(*VRPCResponse)(nil),                   // 2: vrpc.VRPCResponse
	(*HealthCheckRequest)(nil),             // 3: vrpc.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 4: vrpc.HealthCheckResponse
	nil,                                    // 5: vrpc.VRPCRequest.MetadataEntry
	nil,                                    // 6: vrpc.VRPCResponse.MetadataEntry
}
var file_vrpc_proto_depIdxs = []int32{
	5, // 0: vrpc.VRPCRequest.metadata:type_name -> vrpc.VRPCRequest.MetadataEntry
	6, // 1: vrpc.VRPCResponse.metadata:type_name -> vrpc.VRPCResponse.MetadataEntry
	0, // 2: vrpc.HealthCheckResponse.status:type_name -> vrpc.HealthCheckResponse.ServingStatus
	1, // 3: vrpc.VRPCService.Call:input_type -> vrpc.VRPCRequest
	3, // 4: vrpc.VRPCService.HealthCheck:input_type -> vrpc.HealthCheckRequest
	2, // 5: vrpc.VRPCService.Call:output_type -> vrpc.VRPCResponse
	4, // 6: vrpc.VRPCService.HealthCheck:output_type -> vrpc.HealthCheckResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_vrpc_proto_init() }
func file_vrpc_proto_init() {
	if File_vrpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vrpc_proto_rawDesc), len(file_vrpc_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vrpc_proto_goTypes,
		DependencyIndexes: file_vrpc_proto_depIdxs,
		EnumInfos:         file_vrpc_proto_enumTypes,
		MessageInfos:      file_vrpc_proto_msgTypes,
	}.Build()
	File_vrpc_proto = out.File
	file_vrpc_proto_goTypes = nil
	file_vrpc_proto_depIdxs = nil
}
